

Testing for ann_test1_meta.json
10000 vectors with dimension D = 2
Finding 10 nearest vectors to vector X
KNN: 0.539702 seconds
10 nearest neighbors to find
Warning: K-means only supports l2 and cosine distances. Using l2 instead of manhattan.
ann_search function took - 0.08245730400085449
ANN - Top K nearest neighbors indices: [1087 3102  846 5514 3471 1517 2492 4606  692 5274]
ANN: 0.946060 seconds
Recall Rate: 0.8


Testing for ann_test2_meta.json
10000 vectors with dimension D = 1024
Finding 10 nearest vectors to vector X
KNN: 0.009474 seconds
10 nearest neighbors to find
ann_search function took - 0.00487518310546875
ANN - Top K nearest neighbors indices: [4875 9423 9995 8772 7924 7847 9209 8518  946 7099]
ANN: 1.911534 seconds
Recall Rate: 1.0


Testing for ann_test3_meta.json
4000 vectors with dimension D = 100
Finding 10 nearest vectors to vector X
KNN: 0.000988 seconds
10 nearest neighbors to find
ann_search function took - 0.0013453960418701172
ANN - Top K nearest neighbors indices: [ 596 3585 3971  572 2517  292  649 1036  300  285]
ANN: 0.785576 seconds
Recall Rate: 0.7


Testing for ann_test4_meta.json
40000 vectors with dimension D = 100
Finding 10 nearest vectors to vector X
KNN: 0.003436 seconds
10 nearest neighbors to find
ann_search function took - 0.0026972293853759766
ANN - Top K nearest neighbors indices: [ 8097 23897  9654 21250 22553 15914 20494 10081 33205  1840]
ANN: 1.365580 seconds
Recall Rate: 1.0


Testing for ann_test5_meta.json
400000 vectors with dimension D = 100
Finding 10 nearest vectors to vector X
KNN: 0.036648 seconds
10 nearest neighbors to find
ann_search function took - 0.021892786026000977
ANN - Top K nearest neighbors indices: [342143 185295  71895  65245 132618 166736 250913 318398 287728 292576]
ANN: 11.555334 seconds
Recall Rate: 1.0


Testing for ann_test6_meta.json
100000 vectors with dimension D = 1024
Finding 10 nearest vectors to vector X
KNN: 0.078275 seconds
10 nearest neighbors to find
ann_search function took - 0.04356241226196289
ANN - Top K nearest neighbors indices: [91123 47325 23675 44880 58989 77008 90318 92983 79946 65069]
ANN: 16.327887 seconds
Recall Rate: 1.0


Testing for ann_test7_meta.json
1000000 vectors with dimension D = 100
Finding 10 nearest vectors to vector X
KNN: 0.079830 seconds
10 nearest neighbors to find
ann_search function took - 0.05272316932678223
ANN - Top K nearest neighbors indices: [101967 537214 556368 691317 219658  24577 631213 787849 562068 712893]
ANN: 34.786186 seconds
Recall Rate: 1.0


Testing for ann_test8_meta.json
2000000 vectors with dimension D = 100
Finding 10 nearest vectors to vector X
KNN: 0.494362 seconds
10 nearest neighbors to find
ann_search function took - 0.09801387786865234
ANN - Top K nearest neighbors indices: [ 471143  184789 1466179 1355750 1962310 1039436 1319413  507703 1061663
 1780275]
ANN: 70.838265 seconds
Recall Rate: 1.0


Testing for ann_test9_meta.json
4000000 vectors with dimension D = 100
Finding 10 nearest vectors to vector X
KNN: 0.297139 seconds
10 nearest neighbors to find
ann_search function took - 0.19647455215454102
ANN - Top K nearest neighbors indices: [  1  32 118 213 244 365 383 467 497 521]
ANN: 144.945722 seconds
Recall Rate: 1.0


Testing for ann_test10_meta.json
40000 vectors with dimension D = 100
Finding 10 nearest vectors to vector X
KNN: 0.004054 seconds
10 nearest neighbors to find
ann_search function took - 0.002711057662963867
ANN - Top K nearest neighbors indices: [ 8097  9654 21250 23897 16610  7746 22553 33205 18746 14227]
ANN: 1.296849 seconds
Recall Rate: 1.0
