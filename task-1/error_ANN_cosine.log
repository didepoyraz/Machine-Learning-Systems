Traceback (most recent call last):
  File "/home/s2244487/Machine-Learning-Systems/task-1/task.py", line 1130, in <module>
    test_ann_4m()
  File "/home/s2244487/Machine-Learning-Systems/task-1/task.py", line 1096, in test_ann_4m
    ann_result, gpu_time = measure_time(our_ann, N, D, A, X, K)
  File "/home/s2244487/Machine-Learning-Systems/task-1/task.py", line 552, in measure_time
    result = func(*args, **kwargs)
  File "/home/s2244487/Machine-Learning-Systems/task-1/task.py", line 510, in our_ann
    top_k_neighbors = ann_search(A, best_centroids, best_cluster_labels, X, K, K1)
  File "/home/s2244487/Machine-Learning-Systems/task-1/task.py", line 471, in ann_search
    candidate_distances = euclidean_distance(candidate_points, X)
  File "/home/s2244487/Machine-Learning-Systems/task-1/task.py", line 423, in euclidean_distance
    return torch.sqrt(torch.sum((vec1 - vec2) ** 2, dim=-1))
  File "/home/s2244487/.conda/envs/mlsys/lib/python3.10/site-packages/torch/_tensor.py", line 39, in wrapped
    return f(*args, **kwargs)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.49 GiB. GPU 0 has a total capacity of 5.92 GiB of which 1.35 GiB is free. Including non-PyTorch memory, this process has 4.58 GiB memory in use. Of the allocated memory 3.03 GiB is allocated by PyTorch, and 1.46 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
